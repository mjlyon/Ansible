# Primitive Version Prior to Dave's updates 
# Inventory file should have variables defined ideally
---
- name: Gather Info
  hosts: all
  connection: ansible.builtin.local
  gather_facts: false
  vars_prompt:

  # Establish variables; this can also be stored in an inventory file
  - name: username
    prompt: Enter authentication username
    private: false

  - name: password
    prompt: Enter authenticaion password
    private: yes
    
  tasks:

  #Configure Cluster Name
  - name: Configure Cluster Name
    scale_computing.hypercore.cluster_name:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      name_new: {{ server }} Scale Cluster
    register: cluster

  - name: Cluster Name Results
    ansible.builtin.debug:
      msg: "{{ cluster.record.name }}"

  #Configure DNS
  - name: DNS
    scale_computing.hypercore.dns_config:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      search_domains:
        - company.local
  #Example setting with a public DNS server
      dns_servers:
        - 8.8.8.8
        - 4.4.4.4
      state: set
    register: dns
    with_items: [1,2]
  - debug:
      var: dns
  
  #Time Server Configuration
  - name: Configure Time Server
    scale_computing.hypercore.time_server:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      source: pool.ntp.org
    register: timeserver

  - name: Time Server Result
    ansible.builtin.debug:
      msg: "{{ timeserver.record }}"
  
  #SMTP Configuration
  - name: Configure SMTP
    scale_computing.hypercore.smtp:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      from_address: "{{ server }}_Cluster@company.com"
      port: 25
      server: smtp.company.com
      use_ssl: false
    register: SMTP

  - name: SMTP Results
    ansible.builtin.debug:
      msg: "{{ SMTP.record }}"

  #Sample VM import from a local SMB share
  - name: Windows 2022 Template Import
    scale_computing.hypercore.vm_import:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: "Windows 2022 Template"
      smb:
        server: smb.server.address.local
        path: '/path/to/Windows-2022-Template-Directory'
        file_name: Windows-2022-Template.xml
        username: "{{ username }}"
        password: "{{ password }}"
    register: 2022-template

  - name: 2022-template Results
    ansible.builtin.debug:
      msg: "{{ 2022-template.msg }}"

  #Configure Snapshot Schedule
  - name: Configure 2022 Template Snapshot Schedule
    scale_computing.hypercore.snapshot_schedule:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      name: 2022-Template Backup
      state: present
      recurrences:
      - name: 2022-Template Backup                # schedule name
        frequency: "FREQ=DAILY;INTERVAL=1"        # once per day
        start: "2012-01-01 04:00:00"              # start time (choose something in the past to start immediately or the future for a future application
        local_retention: "{{ 7 * 24*60*60 }}"     # retain for 7 days
        remote_retention: "0"
    register: SC-Snapshot

  - name: Snapshot Result
    ansible.builtin.debug:
      msg: "{{ SC-Snapshot.record }}"

  #Apply Created Snapshot Schedule
  - name: Set 2022-Template Snapshot Schedule
    scale_computing.hypercore.vm_params:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: Windows-2022-Template              # VM to apply a schedule to
      snapshot_schedule: "2022-Template Backup"   # Name of schedule to apply

  #Time Zone Configuration
  - name: Configure Timezone
    scale_computing.hypercore.time_zone:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      zone: "America/New York"                    # Time zone to select bounded by quotes
    register: timezone

  - name: Timezone Result
    ansible.builtin.debug:
      msg: "{{ timezone.record }}"

